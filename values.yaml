# Default values for rundeck.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: rundeck/rundeck
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: "5.6.0" --> Commented it will take the app version defined in Chart.yaml file

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

env:
  - name: RUNDECK_GRAILS_URL
    value: http://192.168.0.87:32440  # Node IP and port to make the Rundeck redirections properly
  - name: RUNDECK_SERVER_ADDRESS
    value: 0.0.0.0
  - name: RUNDECK_DATABASE_DRIVER 
    value: org.mariadb.jdbc.Driver 
  - name: RUNDECK_DATABASE_USERNAME
    value: 'root' 
  - name: RUNDECK_DATABASE_PASSWORD
    value: 'root'
  - name: RUNDECK_DATABASE_URL
    #value: 'jdbc:mysql://192.168.0.87:3306/rundeck_dev?useSSL=false&allowPublicKeyRetrieval=true'  # To make the connection to DB instances outside the cluster, for example an external container
    value: 'jdbc:mysql://mysql.db.svc.cluster.local:3306/rundeck_dev?useSSL=false&allowPublicKeyRetrieval=true'
  - name: RUNDECK_DATABASE_DIALECT
    value: org.hibernate.dialect.MySQL8Dialect
  - name: RUNDECK_METRICS_ENABLED   # This enable the /api/<api_version>/metrics endpoint to use by the Prometheus exporter
    value: 'true'
#  - name: RUNDECK_LOGGING_LOGLEVEL_DEFAULT
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_ROOT
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_HIBERNATE
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_SPRING
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_SPRINGBEAN
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_INTERNALS
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_GRAILS
#    value: debug
#  - name: RUNDECK_LOGGING_LOGLEVEL_JETTY
#    value: debug

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "rundeck-sa"

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: 
  monitoring: enabled

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: NodePort
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 4440  # Exposes the service within the cluster for other pods or services (the port of the service itself)
  targetPort: 4440  # Defines the port on the pod where the actual application is running
  nodePort: 32440  # Exposes the service outside the cluster to access it through node IP address and this port

# This is for setting Kubernetes Labels to a Service.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
serviceLabels: 
  monitoring: enabled

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  enabled: true
  httpGet:
    path: /health
    port: 4440  # Container port
  initialDelaySeconds: 240  # Delay time waited to make the first check
  periodSeconds: 30  # Time between checks
  timeoutSeconds: 3  # Time to receive the response (if fails it will return a warning)
  failureThreshold: 5  # How many time it will be checked before K8s restart the container
readinessProbe:   # This check modifies the status of the pod (READY 0/1 --> READY 1/1)
  enabled: true
  httpGet:
    path: /health
    port: 4440  # Container port
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 3

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Base name for all PVC that are gonna be created
persistentVolumeClaim:
  name: rundeck-pvc

# Additional volumes on the output Deployment definition.
volumes: 
  - name: rundeck-data
    persistentVolumeClaim:
      claimName: rundeck-pvc-data
  - name: config-ssl
    secret:
      secretName: rundeck-ssl
  - name: config-realm
    secret:
      secretName: rundeck-realm

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - name: rundeck-data
    mountPath: /home/rundeck/data
  - name: config-realm
    mountPath: /home/rundeck/server/config/realm.properties
    subPath: realm.properties
  - name: config-ssl
    mountPath: /home/rundeck/server/config/ssl.properties
    subPath: ssl.properties
  

nodeSelector: {}

tolerations: []

affinity: {}
